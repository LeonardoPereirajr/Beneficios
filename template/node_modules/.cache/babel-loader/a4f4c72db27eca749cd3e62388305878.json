{"ast":null,"code":"import GLOBAL from './storage.json';\nimport findSring from '../Functions/findString';\nexport function saveData(data) {\n  let invalidForm = false;\n\n  const saveStop = () => {\n    // throw new Error('Formulario Invalido')\n    console.log(GLOBAL.tarefa_1);\n  };\n\n  function tarefa_1() {\n    const taskData = GLOBAL.tarefa_1;\n    console.log(taskData);\n    let retorno = {\n      solicitante: taskData.variaveisProcesso.nomFun,\n      data: new Date(),\n      nomevt: taskData.nomevt,\n      codlin: taskData.codlin,\n      tipo: taskData.tipo,\n      valor: taskData.valor,\n      qtdida: taskData.qtdida,\n      qtdvolta: taskData.qtdvolta,\n      beneficioSelecionado: taskData.beneficioSelecionado,\n      tipoTransporte: taskData.tipoTransporte,\n      novoperiodo: taskData.novoperiodo,\n      esc: taskData.esc,\n      datainivale: taskData.datainivale,\n      datafimvale: taskData.datafimvale,\n      linha: taskData.linha,\n      cartao: taskData.cartao,\n      motivoSelecionado: taskData.motivoSelecionado.label\n    };\n    return {\n      formData: { ...retorno\n      }\n    };\n  }\n\n  saveStop();\n\n  function tarefa_2() {\n    const decisaoUsuario = data.nextAction.name;\n\n    if (findSring(decisaoUsuario, 'Ajustar') || findSring(decisaoUsuario, 'Reprovar')) {\n      var _GLOBAL$tarefa_;\n\n      if (!((_GLOBAL$tarefa_ = GLOBAL.tarefa_2) !== null && _GLOBAL$tarefa_ !== void 0 && _GLOBAL$tarefa_.observacao)) {\n        alert(\"Campo observação é obrigatório\");\n        saveStop();\n      }\n\n      console.log(GLOBAL.tarefa_2.observacao);\n      return {\n        formData: {\n          observacao: GLOBAL.tarefa_2.observacao,\n          decisao: decisaoUsuario\n        }\n      };\n    } else {\n      return {\n        formData: {\n          decisao: decisaoUsuario\n        }\n      };\n    }\n  }\n\n  return {\n    tarefa_1,\n    tarefa_2\n  };\n}","map":{"version":3,"names":["GLOBAL","findSring","saveData","data","invalidForm","saveStop","console","log","tarefa_1","taskData","retorno","solicitante","variaveisProcesso","nomFun","Date","nomevt","codlin","tipo","valor","qtdida","qtdvolta","beneficioSelecionado","tipoTransporte","novoperiodo","esc","datainivale","datafimvale","linha","cartao","motivoSelecionado","label","formData","tarefa_2","decisaoUsuario","nextAction","name","observacao","alert","decisao"],"sources":["C:/Users/leojr/Workspace8/Beneficios/template/src/integration/saveDate.js"],"sourcesContent":["import GLOBAL from './storage.json'\r\nimport findSring from '../Functions/findString';\r\n\r\nexport function saveData(data) {\r\n    let invalidForm = false;\r\n\r\n\r\n    const saveStop = () => {\r\n        // throw new Error('Formulario Invalido')\r\n        console.log(GLOBAL.tarefa_1)\r\n    }\r\n\r\n\r\n    function tarefa_1() {\r\n        const taskData = GLOBAL.tarefa_1;\r\n        console.log(taskData)\r\n\r\n        let retorno = {\r\n            solicitante: taskData.variaveisProcesso.nomFun,\r\n            data: new Date(),\r\n            nomevt: taskData.nomevt,\r\n            codlin: taskData.codlin,\r\n            tipo: taskData.tipo,\r\n            valor: taskData.valor,\r\n            qtdida: taskData.qtdida,\r\n            qtdvolta: taskData.qtdvolta,\r\n            beneficioSelecionado:taskData.beneficioSelecionado,\r\n            tipoTransporte: taskData.tipoTransporte,\r\n            novoperiodo: taskData.novoperiodo,\r\n            esc: taskData.esc,\r\n            datainivale: taskData.datainivale,\r\n            datafimvale: taskData.datafimvale,\r\n            linha: taskData.linha,\r\n            cartao: taskData.cartao,\r\n            motivoSelecionado: taskData.motivoSelecionado.label\r\n        }\r\n        return {\r\n            formData: { ...retorno }\r\n        }\r\n    }\r\n    saveStop()\r\n\r\n\r\nfunction tarefa_2() {\r\n    const decisaoUsuario = data.nextAction.name;\r\n    if (findSring(decisaoUsuario, 'Ajustar') || findSring(decisaoUsuario, 'Reprovar')) {\r\n        if (!GLOBAL.tarefa_2?.observacao) {\r\n            alert(\"Campo observação é obrigatório\")\r\n            saveStop()\r\n        }\r\n        console.log(GLOBAL.tarefa_2.observacao)\r\n        return {\r\n            formData: {\r\n                observacao: GLOBAL.tarefa_2.observacao,\r\n                decisao: decisaoUsuario\r\n            }\r\n\r\n        }\r\n    } else {\r\n        return {\r\n            formData: { decisao: decisaoUsuario }\r\n        }\r\n    }\r\n}\r\nreturn { tarefa_1, tarefa_2 }\r\n}"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,gBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EAC3B,IAAIC,WAAW,GAAG,KAAlB;;EAGA,MAAMC,QAAQ,GAAG,MAAM;IACnB;IACAC,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,QAAnB;EACH,CAHD;;EAMA,SAASA,QAAT,GAAoB;IAChB,MAAMC,QAAQ,GAAGT,MAAM,CAACQ,QAAxB;IACAF,OAAO,CAACC,GAAR,CAAYE,QAAZ;IAEA,IAAIC,OAAO,GAAG;MACVC,WAAW,EAAEF,QAAQ,CAACG,iBAAT,CAA2BC,MAD9B;MAEVV,IAAI,EAAE,IAAIW,IAAJ,EAFI;MAGVC,MAAM,EAAEN,QAAQ,CAACM,MAHP;MAIVC,MAAM,EAAEP,QAAQ,CAACO,MAJP;MAKVC,IAAI,EAAER,QAAQ,CAACQ,IALL;MAMVC,KAAK,EAAET,QAAQ,CAACS,KANN;MAOVC,MAAM,EAAEV,QAAQ,CAACU,MAPP;MAQVC,QAAQ,EAAEX,QAAQ,CAACW,QART;MASVC,oBAAoB,EAACZ,QAAQ,CAACY,oBATpB;MAUVC,cAAc,EAAEb,QAAQ,CAACa,cAVf;MAWVC,WAAW,EAAEd,QAAQ,CAACc,WAXZ;MAYVC,GAAG,EAAEf,QAAQ,CAACe,GAZJ;MAaVC,WAAW,EAAEhB,QAAQ,CAACgB,WAbZ;MAcVC,WAAW,EAAEjB,QAAQ,CAACiB,WAdZ;MAeVC,KAAK,EAAElB,QAAQ,CAACkB,KAfN;MAgBVC,MAAM,EAAEnB,QAAQ,CAACmB,MAhBP;MAiBVC,iBAAiB,EAAEpB,QAAQ,CAACoB,iBAAT,CAA2BC;IAjBpC,CAAd;IAmBA,OAAO;MACHC,QAAQ,EAAE,EAAE,GAAGrB;MAAL;IADP,CAAP;EAGH;;EACDL,QAAQ;;EAGZ,SAAS2B,QAAT,GAAoB;IAChB,MAAMC,cAAc,GAAG9B,IAAI,CAAC+B,UAAL,CAAgBC,IAAvC;;IACA,IAAIlC,SAAS,CAACgC,cAAD,EAAiB,SAAjB,CAAT,IAAwChC,SAAS,CAACgC,cAAD,EAAiB,UAAjB,CAArD,EAAmF;MAAA;;MAC/E,IAAI,qBAACjC,MAAM,CAACgC,QAAR,4CAAC,gBAAiBI,UAAlB,CAAJ,EAAkC;QAC9BC,KAAK,CAAC,gCAAD,CAAL;QACAhC,QAAQ;MACX;;MACDC,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACgC,QAAP,CAAgBI,UAA5B;MACA,OAAO;QACHL,QAAQ,EAAE;UACNK,UAAU,EAAEpC,MAAM,CAACgC,QAAP,CAAgBI,UADtB;UAENE,OAAO,EAAEL;QAFH;MADP,CAAP;IAOH,CAbD,MAaO;MACH,OAAO;QACHF,QAAQ,EAAE;UAAEO,OAAO,EAAEL;QAAX;MADP,CAAP;IAGH;EACJ;;EACD,OAAO;IAAEzB,QAAF;IAAYwB;EAAZ,CAAP;AACC"},"metadata":{},"sourceType":"module"}