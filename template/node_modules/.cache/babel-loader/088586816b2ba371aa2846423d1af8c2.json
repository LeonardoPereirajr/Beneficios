{"ast":null,"code":"import findSring from\"./findString\";export default function processVariableMapper(processVariables){if(processVariables.length){var variaveisMapeadas={};processVariables.map(function(_ref){var key=_ref.key,value=_ref.value,type=_ref.type;if(value){if(findSring(key,'_JSON')){variaveisMapeadas[key]=JSON.parse(value);}else if(type=='Integer'){variaveisMapeadas[key]=parseInt(value);}else if(type=='Double'){variaveisMapeadas[key]=parseFloat(value);}else if(type=='Date'){variaveisMapeadas[key]=new Date(value);}else if(findSring(key,'_JSON')){variaveisMapeadas[key]=JSON.parse(value);}else{variaveisMapeadas[key]=value;}}else{variaveisMapeadas[key]=null;}});return variaveisMapeadas;}}","map":{"version":3,"names":["findSring","processVariableMapper","processVariables","length","variaveisMapeadas","map","key","value","type","JSON","parse","parseInt","parseFloat","Date"],"sources":["C:/Users/leojr/Workspace8/template-bpm/template/src/Functions/processVariablesMapper.js"],"sourcesContent":["import findSring from \"./findString\";\r\n\r\nexport default function processVariableMapper(processVariables) {\r\n    if (processVariables.length) {\r\n        let variaveisMapeadas = {};\r\n        processVariables.map(({ key, value, type }) => {\r\n            if (value) {\r\n                if (findSring(key, '_JSON')) {\r\n                    variaveisMapeadas[key] = JSON.parse(value);\r\n                } else if (type == 'Integer') {\r\n                    variaveisMapeadas[key] = parseInt(value);\r\n                } else if (type == 'Double') {\r\n                    variaveisMapeadas[key] = parseFloat(value);\r\n                } else if (type == 'Date') {\r\n                    variaveisMapeadas[key] = new Date(value);\r\n                } else if (findSring(key, '_JSON')) {\r\n                    variaveisMapeadas[key] = JSON.parse(value);\r\n                } else {\r\n                    variaveisMapeadas[key] = value;\r\n                }\r\n            } else {\r\n                variaveisMapeadas[key] = null;\r\n            }\r\n        });\r\n        return variaveisMapeadas;\r\n    }\r\n}"],"mappings":"AAAA,MAAOA,UAAP,KAAsB,cAAtB,CAEA,cAAe,SAASC,sBAAT,CAA+BC,gBAA/B,CAAiD,CAC5D,GAAIA,gBAAgB,CAACC,MAArB,CAA6B,CACzB,GAAIC,kBAAiB,CAAG,EAAxB,CACAF,gBAAgB,CAACG,GAAjB,CAAqB,cAA0B,IAAvBC,IAAuB,MAAvBA,GAAuB,CAAlBC,KAAkB,MAAlBA,KAAkB,CAAXC,IAAW,MAAXA,IAAW,CAC3C,GAAID,KAAJ,CAAW,CACP,GAAIP,SAAS,CAACM,GAAD,CAAM,OAAN,CAAb,CAA6B,CACzBF,iBAAiB,CAACE,GAAD,CAAjB,CAAyBG,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAzB,CACH,CAFD,IAEO,IAAIC,IAAI,EAAI,SAAZ,CAAuB,CAC1BJ,iBAAiB,CAACE,GAAD,CAAjB,CAAyBK,QAAQ,CAACJ,KAAD,CAAjC,CACH,CAFM,IAEA,IAAIC,IAAI,EAAI,QAAZ,CAAsB,CACzBJ,iBAAiB,CAACE,GAAD,CAAjB,CAAyBM,UAAU,CAACL,KAAD,CAAnC,CACH,CAFM,IAEA,IAAIC,IAAI,EAAI,MAAZ,CAAoB,CACvBJ,iBAAiB,CAACE,GAAD,CAAjB,CAAyB,GAAIO,KAAJ,CAASN,KAAT,CAAzB,CACH,CAFM,IAEA,IAAIP,SAAS,CAACM,GAAD,CAAM,OAAN,CAAb,CAA6B,CAChCF,iBAAiB,CAACE,GAAD,CAAjB,CAAyBG,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAzB,CACH,CAFM,IAEA,CACHH,iBAAiB,CAACE,GAAD,CAAjB,CAAyBC,KAAzB,CACH,CACJ,CAdD,IAcO,CACHH,iBAAiB,CAACE,GAAD,CAAjB,CAAyB,IAAzB,CACH,CACJ,CAlBD,EAmBA,MAAOF,kBAAP,CACH,CACJ"},"metadata":{},"sourceType":"module"}