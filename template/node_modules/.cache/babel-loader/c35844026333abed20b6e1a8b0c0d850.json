{"ast":null,"code":"import _objectSpread from\"C:/Users/leojr/Workspace8/Beneficios/template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import GLOBAL from'./storage.json';import findSring from'../Functions/findString';export function saveData(data){var invalidForm=false;var saveStop=function saveStop(){// throw new Error('Formulario Invalido')\nconsole.log(GLOBAL.tarefa_1);};function tarefa_1(){var taskData=GLOBAL.tarefa_1;console.log(taskData);var retorno={motivoSelecionado:taskData.motivoSelecionado.label,operacaoSelecionada:taskData.operacaoSelecionada.label,beneficioSelecionado:taskData.beneficioSelecionado.label,transporteSelecionado:taskData.transporteSelecionado.label,codlin:taskData.codlin,tipo:taskData.tipo,valor:taskData.valor,qtdida:taskData.qtdida,qtdvolta:taskData.qtdvolta,novoperiodo:taskData.datainivale,fimperiodo:taskData.fimperiodo,esc:taskData.esc,datafimvale:taskData.datafimvale,linha:taskData.linha,cartao:taskData.cartao,escvtr:taskData.escvtr,inievt:taskData.inievt,nomevt:taskData.nomevt};return{formData:_objectSpread({},retorno)};}saveStop();function tarefa_2(){var decisaoUsuario=data.nextAction.name;console.log(GLOBAL);if(findSring(decisaoUsuario,'Ajustar')||findSring(decisaoUsuario,'Reprovar')){return{formData:{decisao:decisaoUsuario}};}else{return{formData:{decisao:decisaoUsuario}};}// if (!invalidForm) {\n//     if (findSring(proximaTarefa.name, 'Aprova')) {\n//         let beneficios = [{\n//             numemp: GLOBAL.state.variaveisProcesso.empresaSolicitante,\n//             tipcol: GLOBAL.state.variaveisProcesso.tipoColaboradorSolicitante,\n//             numcad: GLOBAL.state.variaveisProcesso.cadastroSolicitante == GLOBAL.state.variaveisProcesso.empresaSolicitante ? numCadAlterado:GLOBAL.state.variaveisProcesso.cadastroSolicitante,\n//             datafa: GLOBAL.tarefa_2.dataInicio?.toLocaleDateString(),\n//             datter: GLOBAL.tarefa_2.dataTermino?.toLocaleDateString(),\n//             sitafa: GLOBAL.tarefa_2.situacao.codsit,\n//             obsafa: GLOBAL.tarefa_2?.descricao || 'teste',\n//             diaprv: GLOBAL.tarefa_2.dataTermino ? GLOBAL.tarefa_2.quantidadeDias : GLOBAL.tarefa_2.prevQuantidadeDias,\n//             idbpm: data.processInstanceId,\n//             // nomeprocesso: GLOBAL.state.dadosTarefa.processName,\n//             prvter: GLOBAL.tarefa_2.prevDataTermino?.toLocaleDateString() || GLOBAL.tarefa_2.dataTermino?.toLocaleDateString(),\n//             nomate: GLOBAL.tarefa_2.atendente,\n//         }];\n//         if (\n//             GLOBAL.tarefa_2.novaSituacao &&\n//             GLOBAL.tarefa_2.novaQuantidadeDias &&\n//             GLOBAL.tarefa_2.novaDataInicio\n//         ) \n//         let { retorno } = await postValeTransporte(teste);\n//         if (retorno != 'Sucesso') {\n//             erroIntegracao = 1;\n//             console.log(\"Retorno != Sucesso\")\n//             setMessage({ severity: 'error', detail: retorno, sticky: true, life: 10000 });\n//             integracao = 'Erro na integração'\n//             throw new Error('Erro na integração.');\n//         } else if (retorno == 'Sucesso') {\n//             console.log(\"retorno = Sucesso\")\n//             integracao = 'Integrado com sucesso'\n//             erroIntegracao = 0;\n//             setMessage({ severity: 'success', \n//             summary: 'Gravado com Sucesso!', detail: 'Beneficio gravado com sucesso!', sticky: true })\n//         }\n//     }\n//     let retorno = {\n// codlin: taskData.codlin,\n// tipo: taskData.tipo,\n// valor: taskData.valor,\n// qtdida: taskData.qtdida,\n// qtdvolta: taskData.qtdvolta,\n// novoperiodo: taskData.datainivale,\n// fimperiodo: taskData.fimperiodo,\n// esc: taskData.esc,\n// datafimvale: taskData.datafimvale,\n// linha: taskData.linha,\n// cartao: taskData.cartao,\n// motivoSelecionado: taskData.motivoSelecionado.label,\n// operacaoSelecionada: taskData.operacaoSelecionada.label,\n// beneficioSelecionado: taskData.beneficioSelecionado.label,\n// transporteSelecionado: taskData.transporteSelecionado.label,\n// escvtr: taskData.escvtr,\n// inievt: taskData.inievt,\n// nomevt: taskData.nomevt\n//         decisao: findSring(proximaTarefa.name, 'Aprova') ? 'Aprovado' : \n//         findSring(proximaTarefa.name, 'Reprova') ? 'Reprovado' : 'Ajuste'\n//     }\n//     console.log(\"FormData Retorno\", retorno)\n//     return {\n//         formData: { ...retorno }\n//     }\n// } else {\n//     saveStop()\n// }\n}return{tarefa_1:tarefa_1,tarefa_2:tarefa_2};}","map":{"version":3,"names":["GLOBAL","findSring","saveData","data","invalidForm","saveStop","console","log","tarefa_1","taskData","retorno","motivoSelecionado","label","operacaoSelecionada","beneficioSelecionado","transporteSelecionado","codlin","tipo","valor","qtdida","qtdvolta","novoperiodo","datainivale","fimperiodo","esc","datafimvale","linha","cartao","escvtr","inievt","nomevt","formData","tarefa_2","decisaoUsuario","nextAction","name","decisao"],"sources":["C:/Users/leojr/Workspace8/Beneficios/template/src/integration/saveDate.js"],"sourcesContent":["import GLOBAL from './storage.json'\r\nimport findSring from '../Functions/findString';\r\n\r\nexport function saveData(data) {\r\n    let invalidForm = false;\r\n\r\n\r\n    const saveStop = () => {\r\n        // throw new Error('Formulario Invalido')\r\n        console.log(GLOBAL.tarefa_1)\r\n    }\r\n\r\n\r\n    function tarefa_1() {\r\n        const taskData = GLOBAL.tarefa_1;\r\n        console.log(taskData)\r\n\r\n        let retorno = {\r\n            motivoSelecionado: taskData.motivoSelecionado.label,\r\n            operacaoSelecionada: taskData.operacaoSelecionada.label,\r\n            beneficioSelecionado: taskData.beneficioSelecionado.label,\r\n            transporteSelecionado: taskData.transporteSelecionado.label,\r\n            codlin: taskData.codlin,\r\n            tipo: taskData.tipo,\r\n            valor: taskData.valor,\r\n            qtdida: taskData.qtdida,\r\n            qtdvolta: taskData.qtdvolta,\r\n            novoperiodo: taskData.datainivale,\r\n            fimperiodo: taskData.fimperiodo,\r\n            esc: taskData.esc,\r\n            datafimvale: taskData.datafimvale,\r\n            linha: taskData.linha,\r\n            cartao: taskData.cartao,\r\n            escvtr: taskData.escvtr,\r\n            inievt: taskData.inievt,\r\n            nomevt: taskData.nomevt\r\n        }\r\n        return {\r\n            formData: { ...retorno }\r\n        }\r\n    }\r\n    saveStop()\r\n\r\n\r\n    function tarefa_2() {\r\n        const decisaoUsuario = data.nextAction.name;\r\n        console.log(GLOBAL)\r\n        if (findSring(decisaoUsuario, 'Ajustar') || findSring(decisaoUsuario, 'Reprovar')) {\r\n            return {\r\n                formData: {\r\n                    decisao: decisaoUsuario\r\n                }\r\n\r\n            }\r\n        } else {\r\n            return {\r\n                formData: { decisao: decisaoUsuario }\r\n            }\r\n        }\r\n        // if (!invalidForm) {\r\n        //     if (findSring(proximaTarefa.name, 'Aprova')) {\r\n        //         let beneficios = [{\r\n        //             numemp: GLOBAL.state.variaveisProcesso.empresaSolicitante,\r\n        //             tipcol: GLOBAL.state.variaveisProcesso.tipoColaboradorSolicitante,\r\n        //             numcad: GLOBAL.state.variaveisProcesso.cadastroSolicitante == GLOBAL.state.variaveisProcesso.empresaSolicitante ? numCadAlterado:GLOBAL.state.variaveisProcesso.cadastroSolicitante,\r\n        //             datafa: GLOBAL.tarefa_2.dataInicio?.toLocaleDateString(),\r\n        //             datter: GLOBAL.tarefa_2.dataTermino?.toLocaleDateString(),\r\n        //             sitafa: GLOBAL.tarefa_2.situacao.codsit,\r\n        //             obsafa: GLOBAL.tarefa_2?.descricao || 'teste',\r\n        //             diaprv: GLOBAL.tarefa_2.dataTermino ? GLOBAL.tarefa_2.quantidadeDias : GLOBAL.tarefa_2.prevQuantidadeDias,\r\n        //             idbpm: data.processInstanceId,\r\n        //             // nomeprocesso: GLOBAL.state.dadosTarefa.processName,\r\n        //             prvter: GLOBAL.tarefa_2.prevDataTermino?.toLocaleDateString() || GLOBAL.tarefa_2.dataTermino?.toLocaleDateString(),\r\n        //             nomate: GLOBAL.tarefa_2.atendente,\r\n        //         }];\r\n        //         if (\r\n        //             GLOBAL.tarefa_2.novaSituacao &&\r\n        //             GLOBAL.tarefa_2.novaQuantidadeDias &&\r\n        //             GLOBAL.tarefa_2.novaDataInicio\r\n        //         ) \r\n        //         let { retorno } = await postValeTransporte(teste);\r\n        //         if (retorno != 'Sucesso') {\r\n        //             erroIntegracao = 1;\r\n        //             console.log(\"Retorno != Sucesso\")\r\n        //             setMessage({ severity: 'error', detail: retorno, sticky: true, life: 10000 });\r\n        //             integracao = 'Erro na integração'\r\n        //             throw new Error('Erro na integração.');\r\n        //         } else if (retorno == 'Sucesso') {\r\n        //             console.log(\"retorno = Sucesso\")\r\n        //             integracao = 'Integrado com sucesso'\r\n        //             erroIntegracao = 0;\r\n        //             setMessage({ severity: 'success', \r\n        //             summary: 'Gravado com Sucesso!', detail: 'Beneficio gravado com sucesso!', sticky: true })\r\n        //         }\r\n        //     }\r\n        //     let retorno = {\r\n            // codlin: taskData.codlin,\r\n            // tipo: taskData.tipo,\r\n            // valor: taskData.valor,\r\n            // qtdida: taskData.qtdida,\r\n            // qtdvolta: taskData.qtdvolta,\r\n            // novoperiodo: taskData.datainivale,\r\n            // fimperiodo: taskData.fimperiodo,\r\n            // esc: taskData.esc,\r\n            // datafimvale: taskData.datafimvale,\r\n            // linha: taskData.linha,\r\n            // cartao: taskData.cartao,\r\n            // motivoSelecionado: taskData.motivoSelecionado.label,\r\n            // operacaoSelecionada: taskData.operacaoSelecionada.label,\r\n            // beneficioSelecionado: taskData.beneficioSelecionado.label,\r\n            // transporteSelecionado: taskData.transporteSelecionado.label,\r\n            // escvtr: taskData.escvtr,\r\n            // inievt: taskData.inievt,\r\n            // nomevt: taskData.nomevt\r\n        //         decisao: findSring(proximaTarefa.name, 'Aprova') ? 'Aprovado' : \r\n        //         findSring(proximaTarefa.name, 'Reprova') ? 'Reprovado' : 'Ajuste'\r\n        //     }\r\n        //     console.log(\"FormData Retorno\", retorno)\r\n        //     return {\r\n        //         formData: { ...retorno }\r\n        //     }\r\n\r\n        // } else {\r\n        //     saveStop()\r\n        // }\r\n    }\r\n    return { tarefa_1, tarefa_2 }\r\n}"],"mappings":"kIAAA,MAAOA,OAAP,KAAmB,gBAAnB,CACA,MAAOC,UAAP,KAAsB,yBAAtB,CAEA,MAAO,SAASC,SAAT,CAAkBC,IAAlB,CAAwB,CAC3B,GAAIC,YAAW,CAAG,KAAlB,CAGA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,EAAM,CACnB;AACAC,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,QAAnB,EACH,CAHD,CAMA,QAASA,SAAT,EAAoB,CAChB,GAAMC,SAAQ,CAAGT,MAAM,CAACQ,QAAxB,CACAF,OAAO,CAACC,GAAR,CAAYE,QAAZ,EAEA,GAAIC,QAAO,CAAG,CACVC,iBAAiB,CAAEF,QAAQ,CAACE,iBAAT,CAA2BC,KADpC,CAEVC,mBAAmB,CAAEJ,QAAQ,CAACI,mBAAT,CAA6BD,KAFxC,CAGVE,oBAAoB,CAAEL,QAAQ,CAACK,oBAAT,CAA8BF,KAH1C,CAIVG,qBAAqB,CAAEN,QAAQ,CAACM,qBAAT,CAA+BH,KAJ5C,CAKVI,MAAM,CAAEP,QAAQ,CAACO,MALP,CAMVC,IAAI,CAAER,QAAQ,CAACQ,IANL,CAOVC,KAAK,CAAET,QAAQ,CAACS,KAPN,CAQVC,MAAM,CAAEV,QAAQ,CAACU,MARP,CASVC,QAAQ,CAAEX,QAAQ,CAACW,QATT,CAUVC,WAAW,CAAEZ,QAAQ,CAACa,WAVZ,CAWVC,UAAU,CAAEd,QAAQ,CAACc,UAXX,CAYVC,GAAG,CAAEf,QAAQ,CAACe,GAZJ,CAaVC,WAAW,CAAEhB,QAAQ,CAACgB,WAbZ,CAcVC,KAAK,CAAEjB,QAAQ,CAACiB,KAdN,CAeVC,MAAM,CAAElB,QAAQ,CAACkB,MAfP,CAgBVC,MAAM,CAAEnB,QAAQ,CAACmB,MAhBP,CAiBVC,MAAM,CAAEpB,QAAQ,CAACoB,MAjBP,CAkBVC,MAAM,CAAErB,QAAQ,CAACqB,MAlBP,CAAd,CAoBA,MAAO,CACHC,QAAQ,kBAAOrB,OAAP,CADL,CAAP,CAGH,CACDL,QAAQ,GAGR,QAAS2B,SAAT,EAAoB,CAChB,GAAMC,eAAc,CAAG9B,IAAI,CAAC+B,UAAL,CAAgBC,IAAvC,CACA7B,OAAO,CAACC,GAAR,CAAYP,MAAZ,EACA,GAAIC,SAAS,CAACgC,cAAD,CAAiB,SAAjB,CAAT,EAAwChC,SAAS,CAACgC,cAAD,CAAiB,UAAjB,CAArD,CAAmF,CAC/E,MAAO,CACHF,QAAQ,CAAE,CACNK,OAAO,CAAEH,cADH,CADP,CAAP,CAMH,CAPD,IAOO,CACH,MAAO,CACHF,QAAQ,CAAE,CAAEK,OAAO,CAAEH,cAAX,CADP,CAAP,CAGH,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACH,CACD,MAAO,CAAEzB,QAAQ,CAARA,QAAF,CAAYwB,QAAQ,CAARA,QAAZ,CAAP,CACH"},"metadata":{},"sourceType":"module"}