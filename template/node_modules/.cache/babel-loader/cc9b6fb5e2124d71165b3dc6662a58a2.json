{"ast":null,"code":"import GLOBAL from './storage.json';\nimport findSring from '../Functions/findString';\nimport postValeTransporte from '../Services/postValeTransporte';\nimport { setMessage } from '../globalState';\nexport function saveData(data) {\n  let invalidForm = false;\n\n  const saveStop = () => {\n    // throw new Error('Formulario Invalido')\n    console.log(GLOBAL.tarefa_1);\n  };\n\n  function tarefa_1() {\n    const taskData = GLOBAL.tarefa_1;\n    console.log(taskData); // throw new Error()\n\n    let retorno = {\n      motivoSelecionado: taskData.motivoSelecionado.label,\n      operacaoSelecionada: taskData.operacaoSelecionada.label,\n      beneficioSelecionado: taskData.beneficioSelecionado.label,\n      transporteSelecionado: taskData.transporteSelecionado.label,\n      codlin: taskData.codlin,\n      tipo: taskData.tipo,\n      valor: taskData.valor,\n      qtdida: taskData.qtdida,\n      qtdvolta: taskData.qtdvolta,\n      datainivale: taskData.datainivale,\n      fimperiodo: taskData.fimperiodo,\n      esc: taskData.esc,\n      datafimvale: taskData.datafimvale,\n      linha: taskData.linha,\n      cartao: taskData.cartao,\n      escvtr: taskData.escvtr,\n      inievt: taskData.inievt,\n      nomevt: taskData.nomevt,\n      tarefa1_JSON: JSON.stringify(taskData)\n    };\n    return {\n      formData: { ...retorno\n      }\n    };\n  }\n\n  saveStop();\n\n  async function tarefa_2() {\n    const taskData = GLOBAL.tarefa_2;\n    const decisaoUsuario = data.nextAction.name;\n    const proximaTarefa = data.nextAction;\n    let erroIntegracao = 0;\n    let integracao;\n    console.log(GLOBAL);\n\n    if (findSring(decisaoUsuario, 'Ajustar') || findSring(decisaoUsuario, 'Reprovar')) {\n      return {\n        formData: {\n          decisao: decisaoUsuario\n        }\n      };\n    } else {\n      return {\n        formData: {\n          decisao: decisaoUsuario\n        }\n      };\n    } // eslint-disable-next-line no-unreachable\n\n\n    if (!invalidForm) {\n      if (findSring(proximaTarefa.name, 'Aprova')) {\n        let beneficios = [{\n          motivoSelecionado: GLOBAL.state.variaveisProcesso.empresaSolicitante,\n          operacaoSelecionada: GLOBAL.state.variaveisProcesso.operacaoSelecionada.label,\n          beneficioSelecionado: GLOBAL.state.variaveisProcesso.beneficioSelecionado.label,\n          transporteSelecionado: GLOBAL.state.variaveisProcesso.transporteSelecionado.label,\n          codlin: GLOBAL.state.variaveisProcesso.codlin,\n          tipo: GLOBAL.state.variaveisProcesso.tipo,\n          valor: GLOBAL.state.variaveisProcesso.valor,\n          qtdida: GLOBAL.state.variaveisProcesso.qtdida,\n          qtdvolta: GLOBAL.state.variaveisProcesso.qtdvolta,\n          novoperiodo: GLOBAL.state.variaveisProcesso.novoperiodo,\n          fimperiodo: GLOBAL.state.variaveisProcesso.fimperiodo,\n          esc: GLOBAL.state.variaveisProcesso.esc,\n          datafimvale: GLOBAL.state.variaveisProcesso.datafimvale,\n          linha: GLOBAL.state.variaveisProcesso.linha,\n          cartao: GLOBAL.state.variaveisProcesso.cartao,\n          escvtr: GLOBAL.state.variaveisProcesso.escvtr,\n          inievt: GLOBAL.state.variaveisProcesso.inievt,\n          nomevt: GLOBAL.state.variaveisProcesso.nomevt\n        }];\n        let {\n          retorno\n        } = await postValeTransporte(beneficios);\n\n        if (retorno != 'Sucesso') {\n          erroIntegracao = 1;\n          console.log(\"Retorno != Sucesso\");\n          setMessage({\n            severity: 'error',\n            detail: retorno,\n            sticky: true,\n            life: 10000\n          });\n          integracao = 'Erro na integração';\n          throw new Error('Erro na integração.');\n        } else if (retorno == 'Sucesso') {\n          console.log(\"retorno = Sucesso\"); // eslint-disable-next-line no-unused-vars\n\n          integracao = 'Integrado com sucesso'; // eslint-disable-next-line no-unused-vars\n\n          erroIntegracao = 0;\n          setMessage({\n            severity: 'success',\n            summary: 'Gravado com Sucesso!',\n            detail: 'Beneficio gravado com sucesso!',\n            sticky: true\n          });\n        }\n      }\n\n      let retorno = {\n        codlin: taskData.codlin,\n        tipo: taskData.tipo,\n        valor: taskData.valor,\n        qtdida: taskData.qtdida,\n        qtdvolta: taskData.qtdvolta,\n        novoperiodo: taskData.datainivale,\n        fimperiodo: taskData.fimperiodo,\n        esc: taskData.esc,\n        datafimvale: taskData.datafimvale,\n        linha: taskData.linha,\n        cartao: taskData.cartao,\n        motivoSelecionado: taskData.motivoSelecionado.label,\n        operacaoSelecionada: taskData.operacaoSelecionada.label,\n        beneficioSelecionado: taskData.beneficioSelecionado.label,\n        transporteSelecionado: taskData.transporteSelecionado.label,\n        escvtr: taskData.escvtr,\n        inievt: taskData.inievt,\n        nomevt: taskData.nomevt\n      };\n      console.log(\"FormData Retorno\", retorno);\n      return {\n        formData: { ...retorno\n        }\n      };\n    } else {\n      saveStop();\n    }\n  }\n\n  return {\n    tarefa_1,\n    tarefa_2\n  };\n}","map":{"version":3,"names":["GLOBAL","findSring","postValeTransporte","setMessage","saveData","data","invalidForm","saveStop","console","log","tarefa_1","taskData","retorno","motivoSelecionado","label","operacaoSelecionada","beneficioSelecionado","transporteSelecionado","codlin","tipo","valor","qtdida","qtdvolta","datainivale","fimperiodo","esc","datafimvale","linha","cartao","escvtr","inievt","nomevt","tarefa1_JSON","JSON","stringify","formData","tarefa_2","decisaoUsuario","nextAction","name","proximaTarefa","erroIntegracao","integracao","decisao","beneficios","state","variaveisProcesso","empresaSolicitante","novoperiodo","severity","detail","sticky","life","Error","summary"],"sources":["C:/Users/leojr/Workspace8/Beneficios/template/src/integration/saveDate.js"],"sourcesContent":["import GLOBAL from './storage.json'\r\nimport findSring from '../Functions/findString';\r\nimport postValeTransporte from '../Services/postValeTransporte'\r\nimport { setMessage } from '../globalState';\r\n\r\nexport function saveData(data) {\r\n    let invalidForm = false;\r\n\r\n\r\n    const saveStop = () => {\r\n        // throw new Error('Formulario Invalido')\r\n        console.log(GLOBAL.tarefa_1)\r\n    }\r\n\r\n\r\n    function tarefa_1() {\r\n        const taskData = GLOBAL.tarefa_1;\r\n        console.log(taskData)\r\n        // throw new Error()\r\n        let retorno = {\r\n            motivoSelecionado: taskData.motivoSelecionado.label,\r\n            operacaoSelecionada: taskData.operacaoSelecionada.label,\r\n            beneficioSelecionado: taskData.beneficioSelecionado.label,\r\n            transporteSelecionado: taskData.transporteSelecionado.label,\r\n            codlin: taskData.codlin,\r\n            tipo: taskData.tipo,\r\n            valor: taskData.valor,\r\n            qtdida: taskData.qtdida,\r\n            qtdvolta: taskData.qtdvolta,\r\n            datainivale: taskData.datainivale,\r\n            fimperiodo: taskData.fimperiodo,\r\n            esc: taskData.esc,\r\n            datafimvale: taskData.datafimvale,\r\n            linha: taskData.linha,\r\n            cartao: taskData.cartao,\r\n            escvtr: taskData.escvtr,\r\n            inievt: taskData.inievt,\r\n            nomevt: taskData.nomevt,\r\n            tarefa1_JSON: JSON.stringify(taskData)\r\n        }\r\n        return {\r\n            formData: { ...retorno }\r\n        }\r\n    }\r\n    saveStop()\r\n\r\n\r\n    async function  tarefa_2() {\r\n        const taskData = GLOBAL.tarefa_2;\r\n        const decisaoUsuario = data.nextAction.name;\r\n        const proximaTarefa = data.nextAction;\r\n        let erroIntegracao = 0;\r\n        let integracao;\r\n        console.log(GLOBAL)\r\n        if (findSring(decisaoUsuario, 'Ajustar') || findSring(decisaoUsuario, 'Reprovar')) {\r\n            return {\r\n                formData: {\r\n                    decisao: decisaoUsuario\r\n                }\r\n            }\r\n        } else {\r\n            return {\r\n                formData: { decisao: decisaoUsuario }\r\n            }\r\n        }\r\n        // eslint-disable-next-line no-unreachable\r\n        if (!invalidForm) {\r\n            if (findSring(proximaTarefa.name, 'Aprova')) {\r\n                let beneficios = [{\r\n                        motivoSelecionado: GLOBAL.state.variaveisProcesso.empresaSolicitante,\r\n                        operacaoSelecionada: GLOBAL.state.variaveisProcesso.operacaoSelecionada.label,\r\n                        beneficioSelecionado: GLOBAL.state.variaveisProcesso.beneficioSelecionado.label,\r\n                        transporteSelecionado: GLOBAL.state.variaveisProcesso.transporteSelecionado.label,\r\n                        codlin: GLOBAL.state.variaveisProcesso.codlin,\r\n                        tipo: GLOBAL.state.variaveisProcesso.tipo,\r\n                        valor: GLOBAL.state.variaveisProcesso.valor,\r\n                        qtdida: GLOBAL.state.variaveisProcesso.qtdida,\r\n                        qtdvolta: GLOBAL.state.variaveisProcesso.qtdvolta,\r\n                        novoperiodo: GLOBAL.state.variaveisProcesso.novoperiodo,\r\n                        fimperiodo: GLOBAL.state.variaveisProcesso.fimperiodo,\r\n                        esc: GLOBAL.state.variaveisProcesso.esc,\r\n                        datafimvale: GLOBAL.state.variaveisProcesso.datafimvale,\r\n                        linha: GLOBAL.state.variaveisProcesso.linha,\r\n                        cartao: GLOBAL.state.variaveisProcesso.cartao,\r\n                        escvtr: GLOBAL.state.variaveisProcesso.escvtr,\r\n                        inievt: GLOBAL.state.variaveisProcesso.inievt,\r\n                        nomevt: GLOBAL.state.variaveisProcesso.nomevt,\r\n                    }];\r\n                    let { retorno } = await postValeTransporte(beneficios);\r\n                if (retorno != 'Sucesso') {\r\n                    erroIntegracao = 1;\r\n                    console.log(\"Retorno != Sucesso\")\r\n                    setMessage({ severity: 'error', detail: retorno, sticky: true, life: 10000 });\r\n                    integracao = 'Erro na integração'\r\n                    throw new Error('Erro na integração.');\r\n                } else if (retorno == 'Sucesso') {\r\n                    console.log(\"retorno = Sucesso\")\r\n                    // eslint-disable-next-line no-unused-vars\r\n                    integracao = 'Integrado com sucesso'\r\n                    // eslint-disable-next-line no-unused-vars\r\n                    erroIntegracao = 0;\r\n                    setMessage({ severity: 'success', \r\n                    summary: 'Gravado com Sucesso!', detail: 'Beneficio gravado com sucesso!', sticky: true })\r\n                }\r\n            }\r\n            let retorno = {\r\n            codlin: taskData.codlin,\r\n            tipo: taskData.tipo,\r\n            valor: taskData.valor,\r\n            qtdida: taskData.qtdida,\r\n            qtdvolta: taskData.qtdvolta,\r\n            novoperiodo: taskData.datainivale,\r\n            fimperiodo: taskData.fimperiodo,\r\n            esc: taskData.esc,\r\n            datafimvale: taskData.datafimvale,\r\n            linha: taskData.linha,\r\n            cartao: taskData.cartao,\r\n            motivoSelecionado: taskData.motivoSelecionado.label,\r\n            operacaoSelecionada: taskData.operacaoSelecionada.label,\r\n            beneficioSelecionado: taskData.beneficioSelecionado.label,\r\n            transporteSelecionado: taskData.transporteSelecionado.label,\r\n            escvtr: taskData.escvtr,\r\n            inievt: taskData.inievt,\r\n            nomevt: taskData.nomevt\r\n            }\r\n            console.log(\"FormData Retorno\", retorno)\r\n            return {\r\n                formData: { ...retorno }\r\n            }\r\n        } else {\r\n            saveStop()\r\n        }\r\n    }\r\n    return { tarefa_1, tarefa_2 }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}