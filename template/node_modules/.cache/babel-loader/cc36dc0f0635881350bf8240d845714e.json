{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leojr\\\\Workspace8\\\\Beneficios\\\\template\\\\src\\\\Pages\\\\Tarefa_1.js\",\n    _s = $RefreshSig$();\n\nimport { InputText } from 'primereact/inputtext';\nimport { Divider } from 'primereact/divider';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Button } from 'primereact/button';\nimport { Card } from 'primereact/card';\nimport React from 'react';\nimport useGlobalState from '../globalState';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { useState, useEffect } from 'react';\nimport getColaborador from '../Services/getColaborador';\nimport GLOBAL from '../integration/storage.json';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tarefa_1() {\n  _s();\n\n  var _globalState$variavei;\n\n  const {\n    globalState\n  } = useGlobalState();\n  const info = globalState.variaveisProcesso;\n  const motivoSolicitacao = [{\n    label: 'Alteração de Unidade',\n    cod: 1\n  }, {\n    label: 'Alteração de Escala',\n    cod: 2\n  }, {\n    label: 'Alteração de Endereço',\n    cod: 3\n  }, {\n    label: 'Outros (Justifique)',\n    cod: 4\n  }];\n  const [motivoSelecionado, setMotivoSelecionado] = useState(null);\n  const beneficios = [{\n    label: 'Vale Transporte',\n    cod: 1\n  }, {\n    label: 'Plano de Saúde',\n    cod: 2\n  }, {\n    label: 'Odonto',\n    cod: 3\n  }];\n  const [beneficioSelecionado, setBeneficioSelecionado] = useState(null);\n  const [dados, setDados] = useState(null); // const [beneficios, setBeneficios] = useState(\n  //     info?.beneficios_JSON.beneficios || \n  // [\n  //     {\n  //         tipoBeneficio: ''\n  //     }\n  // ])\n  //ver useEffect\n\n  useEffect(() => {\n    getColaborador(globalState.usuario.subject).then(param => {\n      setDados(param);\n    });\n  }, []);\n  useEffect(() => {\n    GLOBAL.tarefa_1 = { ...dados,\n      beneficios\n    };\n  }); // Funçao para selecionar os beneficios na lista de beneficios\n  // function selectTypes(e, i) {\n  //     let beneficiosCopy = Array.from(beneficios)\n  //     beneficiosCopy[i].tipoBeneficio = e.value\n  //     setBeneficios(beneficiosCopy)\n  // }\n  //Cria uma copia de beneficios e atualiza\n  // function adicionarBeneficios() {\n  //     let beneficiosCopy = Array.from(beneficios)\n  //     beneficiosCopy.push({\n  //         tipoBeneficio: ''\n  //     })\n  //     setBeneficios(beneficiosCopy)\n  // }\n  // function onSelect(param, i) {\n  //     if (param === 1) {\n  //         return (<>\n  //             <div className=\"col-12 field\">\n  //                 {console.log(beneficios)}\n  //                 <label>\n  //                     Nome da operadora de Transporte\n  //                 </label>\n  //                 <InputText\n  //                     className=\"w-full\"\n  //                     value={beneficios[i]?.nomeOperadora}\n  //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].nomeOperadora = e.target.value)}\n  //                 />\n  //             </div>\n  //             <div className=\"col-12 field\">\n  //                 <label>\n  //                     Número da Linha\n  //                 </label>\n  //                 <InputNumber className=\"w-full\" inputClassName=\"w-full\"\n  //                     value={beneficios[i]?.numeroLinha}\n  //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].numeroLinha = e.value)}\n  //                 />\n  //             </div>\n  //             <div className=\"col-12 field\">\n  //                 <label>\n  //                     Tipo de Transporte\n  //                 </label>\n  //                 <InputText className=\"w-full\"\n  //                     value={beneficios[i]?.tipoTransporte}\n  //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].tipoTransporte = e.target.value)}\n  //                     placeholder=\"Onibus, metro, trem etc\"\n  //                 />\n  //             </div>\n  //             <div className=\"col-12 field\">\n  //                 <label>\n  //                     Valor da Tarifa\n  //                 </label>\n  //                 <InputNumber className=\"w-full\" inputClassName=\"w-full\" mode=\"currency\" currency=\"BRL\" locale=\"pt-BR\"\n  //                     value={beneficios[i]?.valorTarifa}\n  //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].valorTarifa = e.value)}\n  //                 />\n  //             </div>\n  //             <div className=\"col-12 field\">\n  //                 <label>\n  //                     Quantidade utilizada para ida\n  //                 </label>\n  //                 <InputNumber className=\"w-full\"\n  //                     value={beneficios[i]?.quantidadeIda}\n  //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].quantidadeIda = e.value)}\n  //                 />\n  //             </div>\n  //             <div className=\"col-12 field\">\n  //                 <label>\n  //                     Quantidade utilizada para volta\n  //                 </label>\n  //                 <InputNumber className=\"w-full\"\n  //                     value={beneficios[i]?.quantidadeVolta}\n  //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].quantidadeVolta = e.value)}\n  //                 />\n  //             </div>\n  //         </>\n  //         )\n  //     } else if (param === 2) {\n  //         const listaTipoPessoa = [\n  //             { label: 'Titular' },\n  //             { label: 'Dependente' },\n  //         ]\n  //         return (<>\n  //             <div className=\"col-12 field\">\n  //                 {console.log(beneficios)}\n  //                 <label>\n  //                     Tipo\n  //                 </label>\n  //                 <Dropdown options={listaTipoPessoa} className=\"w-full\"\n  //                     value={beneficios[i]?.tipoPessoa}\n  //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].tipoPessoa = e.value)}\n  //                 />\n  //             </div>\n  //             {\n  //                 beneficios[i].tipoPessoa?.label === \"Dependente\" &&\n  //                 <div className=\"col-12 field\">\n  //                     <Dropdown\n  //                         className=\"w-full\"\n  //                         optionLabel=\"nome\"\n  //                         options={[\n  //                             { nome: \"Dependente1\" },\n  //                             { nome: \"Dependente2\" }\n  //                         ]}\n  //                         onChange={(e) => setBeneficios([...beneficios], beneficios[i].dependente = e.value)}\n  //                         value={beneficios[i]?.dependente}\n  //                     />\n  //                 </div>\n  //             }\n  //             <div className=\"col-12 field\">\n  //                 <label>\n  //                     Plano\n  //                 </label>\n  //                 <Dropdown\n  //                     className=\"w-full\"\n  //                     optionLabel=\"nome\"\n  //                     options={[\n  //                         { nome: \"Plano1\" },\n  //                         { nome: \"Plano2\" }\n  //                     ]}\n  //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].tipoPlano = e.value)}\n  //                     value={beneficios[i]?.tipoPlano}\n  //                 />\n  //             </div>\n  //         </>)\n  //     } else if (param === 3) {\n  //         return \" \"\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [((_globalState$variavei = globalState.variaveisProcesso) === null || _globalState$variavei === void 0 ? void 0 : _globalState$variavei.observacao) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Observa\\xE7\\xE3o CSC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputTextarea, {\n        className: \"w-full\",\n        value: info.observacao,\n        readonly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"COLABORADOR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        className: \"w-full\",\n        value: dados === null || dados === void 0 ? void 0 : dados.usuario.nomFun,\n        readonly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Empresa \\\\ Filial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        className: \"w-full\",\n        value: (dados === null || dados === void 0 ? void 0 : dados.empresa.numEmp) + '-' + (dados === null || dados === void 0 ? void 0 : dados.empresa.codFil) + '-' + (dados === null || dados === void 0 ? void 0 : dados.empresa.nomFil),\n        readonly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), console.log(dados)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      align: \"left\",\n      children: \" BENEF\\xCDCIOS \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 field\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        value: motivoSelecionado,\n        options: motivoSolicitacao,\n        className: \"w-full\",\n        onChange: e => setMotivoSelecionado(e.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      align: \"left\",\n      children: \" Escolha o beneficio. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 field\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        value: beneficios,\n        options: beneficioSelecionado,\n        className: \"w-full\",\n        onChange: e => setBeneficioSelecionado(e.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      align: \"left\",\n      children: \" Justificativa \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputTextarea, {\n        className: \"w-full\",\n        rows: 4,\n        value: dados === null || dados === void 0 ? void 0 : dados.descricao,\n        onChange: e => setDados({ ...dados,\n          descricao: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tarefa_1, \"6Sv3s5bTDJgQTxZPxGzMrUkaVcM=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = Tarefa_1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tarefa_1\");","map":{"version":3,"names":["InputText","Divider","Dropdown","Button","Card","React","useGlobalState","InputTextarea","useState","useEffect","getColaborador","GLOBAL","InputNumber","Tarefa_1","globalState","info","variaveisProcesso","motivoSolicitacao","label","cod","motivoSelecionado","setMotivoSelecionado","beneficios","beneficioSelecionado","setBeneficioSelecionado","dados","setDados","usuario","subject","then","param","tarefa_1","observacao","nomFun","empresa","numEmp","codFil","nomFil","console","log","e","value","descricao","target"],"sources":["C:/Users/leojr/Workspace8/Beneficios/template/src/Pages/Tarefa_1.js"],"sourcesContent":["import { InputText } from 'primereact/inputtext';\r\nimport { Divider } from 'primereact/divider';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport React from 'react'\r\nimport useGlobalState from '../globalState';\r\nimport { InputTextarea } from 'primereact/inputtextarea'\r\nimport { useState, useEffect } from 'react';\r\nimport getColaborador from '../Services/getColaborador';\r\nimport GLOBAL from '../integration/storage.json'\r\nimport { InputNumber } from 'primereact/inputnumber';\r\n\r\nexport default function Tarefa_1() {\r\n    const { globalState } = useGlobalState()\r\n    const info = globalState.variaveisProcesso\r\n\r\n    const motivoSolicitacao = [\r\n        { label : 'Alteração de Unidade', cod :1 },\r\n        { label : 'Alteração de Escala', cod :2 },\r\n        { label : 'Alteração de Endereço', cod :3 },\r\n        { label : 'Outros (Justifique)', cod :4 },\r\n\r\n    ]\r\n    const [motivoSelecionado, setMotivoSelecionado]=useState(null)\r\n    \r\n    const beneficios = [\r\n        {label : 'Vale Transporte', cod:1},\r\n        {label : 'Plano de Saúde', cod:2},\r\n        {label : 'Odonto', cod:3},\r\n    ]\r\n    const [beneficioSelecionado, setBeneficioSelecionado]=useState(null)\r\n\r\n    const [dados, setDados] = useState(null)\r\n\r\n    // const [beneficios, setBeneficios] = useState(\r\n    //     info?.beneficios_JSON.beneficios || \r\n    // [\r\n    //     {\r\n    //         tipoBeneficio: ''\r\n    //     }\r\n    // ])\r\n\r\n\r\n    //ver useEffect\r\n    useEffect(() => {\r\n        getColaborador(globalState.usuario.subject).then((param) => {\r\n            setDados(param)\r\n        })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        GLOBAL.tarefa_1 = {\r\n            ...dados,\r\n            beneficios\r\n        }\r\n    })\r\n    \r\n    // Funçao para selecionar os beneficios na lista de beneficios\r\n    // function selectTypes(e, i) {\r\n    //     let beneficiosCopy = Array.from(beneficios)\r\n    //     beneficiosCopy[i].tipoBeneficio = e.value\r\n    //     setBeneficios(beneficiosCopy)\r\n    // }\r\n\r\n    //Cria uma copia de beneficios e atualiza\r\n    // function adicionarBeneficios() {\r\n    //     let beneficiosCopy = Array.from(beneficios)\r\n    //     beneficiosCopy.push({\r\n    //         tipoBeneficio: ''\r\n    //     })\r\n    //     setBeneficios(beneficiosCopy)\r\n    // }\r\n\r\n    // function onSelect(param, i) {\r\n    //     if (param === 1) {\r\n    //         return (<>\r\n    //             <div className=\"col-12 field\">\r\n    //                 {console.log(beneficios)}\r\n    //                 <label>\r\n    //                     Nome da operadora de Transporte\r\n    //                 </label>\r\n    //                 <InputText\r\n    //                     className=\"w-full\"\r\n    //                     value={beneficios[i]?.nomeOperadora}\r\n    //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].nomeOperadora = e.target.value)}\r\n    //                 />\r\n\r\n    //             </div>\r\n    //             <div className=\"col-12 field\">\r\n\r\n    //                 <label>\r\n    //                     Número da Linha\r\n    //                 </label>\r\n    //                 <InputNumber className=\"w-full\" inputClassName=\"w-full\"\r\n    //                     value={beneficios[i]?.numeroLinha}\r\n    //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].numeroLinha = e.value)}\r\n    //                 />\r\n    //             </div>\r\n    //             <div className=\"col-12 field\">\r\n\r\n    //                 <label>\r\n    //                     Tipo de Transporte\r\n    //                 </label>\r\n    //                 <InputText className=\"w-full\"\r\n    //                     value={beneficios[i]?.tipoTransporte}\r\n    //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].tipoTransporte = e.target.value)}\r\n    //                     placeholder=\"Onibus, metro, trem etc\"\r\n    //                 />\r\n    //             </div>\r\n    //             <div className=\"col-12 field\">\r\n\r\n    //                 <label>\r\n    //                     Valor da Tarifa\r\n    //                 </label>\r\n    //                 <InputNumber className=\"w-full\" inputClassName=\"w-full\" mode=\"currency\" currency=\"BRL\" locale=\"pt-BR\"\r\n    //                     value={beneficios[i]?.valorTarifa}\r\n    //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].valorTarifa = e.value)}\r\n    //                 />\r\n\r\n    //             </div>\r\n    //             <div className=\"col-12 field\">\r\n\r\n    //                 <label>\r\n    //                     Quantidade utilizada para ida\r\n    //                 </label>\r\n    //                 <InputNumber className=\"w-full\"\r\n    //                     value={beneficios[i]?.quantidadeIda}\r\n    //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].quantidadeIda = e.value)}\r\n    //                 />\r\n\r\n    //             </div>\r\n    //             <div className=\"col-12 field\">\r\n\r\n    //                 <label>\r\n    //                     Quantidade utilizada para volta\r\n    //                 </label>\r\n    //                 <InputNumber className=\"w-full\"\r\n    //                     value={beneficios[i]?.quantidadeVolta}\r\n    //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].quantidadeVolta = e.value)}\r\n    //                 />\r\n\r\n    //             </div>\r\n    //         </>\r\n    //         )\r\n\r\n    //     } else if (param === 2) {\r\n\r\n    //         const listaTipoPessoa = [\r\n    //             { label: 'Titular' },\r\n    //             { label: 'Dependente' },\r\n\r\n    //         ]\r\n\r\n    //         return (<>\r\n    //             <div className=\"col-12 field\">\r\n    //                 {console.log(beneficios)}\r\n    //                 <label>\r\n    //                     Tipo\r\n    //                 </label>\r\n    //                 <Dropdown options={listaTipoPessoa} className=\"w-full\"\r\n    //                     value={beneficios[i]?.tipoPessoa}\r\n    //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].tipoPessoa = e.value)}\r\n    //                 />\r\n\r\n    //             </div>\r\n    //             {\r\n    //                 beneficios[i].tipoPessoa?.label === \"Dependente\" &&\r\n    //                 <div className=\"col-12 field\">\r\n    //                     <Dropdown\r\n    //                         className=\"w-full\"\r\n    //                         optionLabel=\"nome\"\r\n    //                         options={[\r\n    //                             { nome: \"Dependente1\" },\r\n    //                             { nome: \"Dependente2\" }\r\n    //                         ]}\r\n    //                         onChange={(e) => setBeneficios([...beneficios], beneficios[i].dependente = e.value)}\r\n    //                         value={beneficios[i]?.dependente}\r\n    //                     />\r\n    //                 </div>\r\n    //             }\r\n    //             <div className=\"col-12 field\">\r\n\r\n    //                 <label>\r\n    //                     Plano\r\n    //                 </label>\r\n    //                 <Dropdown\r\n    //                     className=\"w-full\"\r\n    //                     optionLabel=\"nome\"\r\n    //                     options={[\r\n    //                         { nome: \"Plano1\" },\r\n    //                         { nome: \"Plano2\" }\r\n    //                     ]}\r\n    //                     onChange={(e) => setBeneficios([...beneficios], beneficios[i].tipoPlano = e.value)}\r\n    //                     value={beneficios[i]?.tipoPlano}\r\n    //                 />\r\n    //             </div>\r\n\r\n    //         </>)\r\n\r\n    //     } else if (param === 3) {\r\n    //         return \" \"\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n            {\r\n                globalState.variaveisProcesso?.observacao &&\r\n                <div className=\"col-12 field\">\r\n                    <label>\r\n                        Observação CSC\r\n                    </label>\r\n                    <InputTextarea className=\"w-full\"\r\n                        value={info.observacao}\r\n                        readonly\r\n                    />\r\n                </div>\r\n            }\r\n            <div className=\"col-12 field\">\r\n                <label>\r\n                    COLABORADOR\r\n                </label>\r\n                <InputText className=\"w-full\"\r\n                    value={dados?.usuario.nomFun}\r\n                    readonly\r\n                />\r\n            </div>\r\n            {/* <Divider align=\"left\" >Histórico Anterior </Divider> */}\r\n\r\n            <div className=\"col-12 field\">\r\n\r\n                <label>\r\n                    Empresa \\ Filial\r\n                </label>\r\n                <InputText className=\"w-full\" value={dados?.empresa.numEmp + '-' + dados?.empresa.codFil +  '-' + dados?.empresa.nomFil } \r\n                    readonly\r\n                />\r\n            {console.log(dados)}\r\n            </div>\r\n\r\n            <Divider align=\"left\" > BENEFÍCIOS </Divider>\r\n            \r\n                <div className=\"col-12 field\">\r\n                    <Dropdown \r\n                    value={motivoSelecionado}\r\n                    options={motivoSolicitacao} \r\n                    className=\"w-full\"\r\n                    onChange={(e)=> setMotivoSelecionado(e.value)}\r\n                    />\r\n                </div>            \r\n\r\n            <Divider align=\"left\" > Escolha o beneficio. </Divider>\r\n\r\n            <div className=\"col-12 field\">\r\n                    <Dropdown \r\n                    value={beneficios}\r\n                    options={beneficioSelecionado} \r\n                    className=\"w-full\"\r\n                    onChange={(e)=> setBeneficioSelecionado(e.value)}\r\n                    />\r\n                </div> \r\n\r\n\r\n            <Divider align=\"left\" > Justificativa </Divider>\r\n            <div className=\"col-12 field\">\r\n                <label>\r\n                    Descrição\r\n                </label>\r\n                <InputTextarea className=\"w-full\" rows={4} value={dados?.descricao} onChange={(e) => setDados({ ...dados, descricao: e.target.value })} />\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}